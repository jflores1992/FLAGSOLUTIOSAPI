// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace FLAGSOLUTIOSAPI.Models;

public partial class MANTENIMIENTODBContext : DbContext
{
    public MANTENIMIENTODBContext()
    {
    }

    public MANTENIMIENTODBContext(DbContextOptions<MANTENIMIENTODBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CategoriasMateriale> CategoriasMateriales { get; set; }

    public virtual DbSet<CentrosEmplazamiento> CentrosEmplazamientos { get; set; }

    public virtual DbSet<CiclosPaquetesMantenimiento> CiclosPaquetesMantenimientos { get; set; }

    public virtual DbSet<ClasesdeOrden> ClasesdeOrdens { get; set; }

    public virtual DbSet<ComponentesOperacionHojaRutum> ComponentesOperacionHojaRuta { get; set; }

    public virtual DbSet<ComponentesOrdene> ComponentesOrdenes { get; set; }

    public virtual DbSet<DocumentosMedicion> DocumentosMedicions { get; set; }

    public virtual DbSet<Empresa> Empresas { get; set; }

    public virtual DbSet<Equipo> Equipos { get; set; }

    public virtual DbSet<EstatusOrdene> EstatusOrdenes { get; set; }

    public virtual DbSet<EstrategiasMantenimiento> EstrategiasMantenimientos { get; set; }

    public virtual DbSet<GruposHojasRutum> GruposHojasRuta { get; set; }

    public virtual DbSet<GruposPlanificacionMantenimiento> GruposPlanificacionMantenimientos { get; set; }

    public virtual DbSet<HistorialMantenimientoCreado> HistorialMantenimientoCreados { get; set; }

    public virtual DbSet<IndicadoresCriticidad> IndicadoresCriticidads { get; set; }

    public virtual DbSet<Materiale> Materiales { get; set; }

    public virtual DbSet<Menu> Menus { get; set; }

    public virtual DbSet<NotificacionManoObra> NotificacionManoObras { get; set; }

    public virtual DbSet<OperacionesHojasRutum> OperacionesHojasRuta { get; set; }

    public virtual DbSet<OperacionesOrdene> OperacionesOrdenes { get; set; }

    public virtual DbSet<OrdenesTrabajoEncabezado> OrdenesTrabajoEncabezados { get; set; }

    public virtual DbSet<PaqueteMantenimientoOperacionHojaRutum> PaqueteMantenimientoOperacionHojaRuta { get; set; }

    public virtual DbSet<PaquetesMantenimiento> PaquetesMantenimientos { get; set; }

    public virtual DbSet<Perfil> Perfils { get; set; }

    public virtual DbSet<Periodo> Periodos { get; set; }

    public virtual DbSet<PresupuestoEquipo> PresupuestoEquipos { get; set; }

    public virtual DbSet<PrioridadesMantenimiento> PrioridadesMantenimientos { get; set; }

    public virtual DbSet<PuestosTrabajo> PuestosTrabajos { get; set; }

    public virtual DbSet<PuntosMedidum> PuntosMedida { get; set; }

    public virtual DbSet<SeccionesMaquina> SeccionesMaquinas { get; set; }

    public virtual DbSet<Sucursale> Sucursales { get; set; }

    public virtual DbSet<TiposEquipo> TiposEquipos { get; set; }

    public virtual DbSet<TiposPuntoMedidum> TiposPuntoMedida { get; set; }

    public virtual DbSet<UnidadesMedidaCaracteristica> UnidadesMedidaCaracteristicas { get; set; }

    public virtual DbSet<Usuario> Usuarios { get; set; }

    public virtual DbSet<UsuariosMenu> UsuariosMenus { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
    //    //  Calidad
    //    => optionsBuilder.UseSqlServer("Data Source=NoybinFlores\\LIFESOLUTIONS;Initial Catalog=MANTENIMIENTODB;Persist Security Info=True;User ID=sa;Password=Admin..2024;Encrypt=True;Trust Server Certificate=True");
    //Produccion
    => optionsBuilder.UseSqlServer("Data Source=EC2AMAZ-IL43F9H\\FLAGSOLUTIONS;Initial Catalog=MANTENIMIENTODB;Persist Security Info=True;User ID=sa;Password=Flag0101..;Encrypt=True;Trust Server Certificate=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CategoriasMateriale>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Categori__3214EC0791BF429C");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.NombreCategoria)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
        });

        modelBuilder.Entity<CentrosEmplazamiento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CentrosE__3214EC07BCC54925");

            entity.ToTable("CentrosEmplazamiento");

            entity.Property(e => e.Activo).HasDefaultValueSql("((1))");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.NombreCentro)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<CiclosPaquetesMantenimiento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CiclosPa__3214EC07074B6803");

            entity.ToTable("CiclosPaquetesMantenimiento");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.DenominacionCicloMantenimiento)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.TextoCicloMantenimiento)
                .IsRequired()
                .HasMaxLength(1);

            entity.HasOne(d => d.IdEstrategiaMantenimientoNavigation).WithMany(p => p.CiclosPaquetesMantenimientos)
                .HasForeignKey(d => d.IdEstrategiaMantenimiento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CiclosPaquetesMantenimiento_EstrategiasMantenimiento");
        });

        modelBuilder.Entity<ClasesdeOrden>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Clasesde__3214EC0718B533FB");

            entity.ToTable("ClasesdeOrden");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.ClaseOrden)
                .IsRequired()
                .HasMaxLength(1);
            entity.Property(e => e.Denominacion)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
        });

        modelBuilder.Entity<ComponentesOperacionHojaRutum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Componen__3214EC0786CBD94F");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.Cantidad).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.IdMaterialNavigation).WithMany(p => p.ComponentesOperacionHojaRuta)
                .HasForeignKey(d => d.IdMaterial)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ComponentesOperacionHojaRuta_Materiales");

            entity.HasOne(d => d.IdOperacionHoraRutaNavigation).WithMany(p => p.ComponentesOperacionHojaRuta)
                .HasForeignKey(d => d.IdOperacionHoraRuta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ComponentesOperacionHojaRuta_OperacionesHojasRuta");
        });

        modelBuilder.Entity<ComponentesOrdene>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Componen__3214EC07856E5E5E");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.Cantidad).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.PrecioUnitarioActual)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("Precio_UnitarioActual");

            entity.HasOne(d => d.IdMaterialNavigation).WithMany(p => p.ComponentesOrdenes)
                .HasForeignKey(d => d.IdMaterial)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ComponentesOrdenes_Materiales");

            entity.HasOne(d => d.IdOrdenNavigation).WithMany(p => p.ComponentesOrdenes)
                .HasForeignKey(d => d.IdOrden)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ComponentesOrdenes_OrdenesTrabajoEncabezado");
        });

        modelBuilder.Entity<DocumentosMedicion>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Document__3214EC07B1BA82A2");

            entity.ToTable("DocumentosMedicion");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.DiferenciaCantidad)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("Diferencia_Cantidad");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaHoraMedicion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.ValorContador).HasColumnType("numeric(18, 2)");

            entity.HasOne(d => d.IdPuntoMedidaNavigation).WithMany(p => p.DocumentosMedicions)
                .HasForeignKey(d => d.IdPuntoMedida)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DocumentosMedicion_PuntosMedida");
        });

        modelBuilder.Entity<Empresa>(entity =>
        {
            entity.ToTable("Empresa");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Correo).HasMaxLength(50);
            entity.Property(e => e.Creacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(150);
            entity.Property(e => e.Rtn)
                .IsRequired()
                .HasMaxLength(20)
                .HasDefaultValueSql("('')")
                .HasColumnName("RTN");
            entity.Property(e => e.Telefono)
                .HasMaxLength(15)
                .IsFixedLength();
        });

        modelBuilder.Entity<Equipo>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.CodigoBarraUnico)
                .HasMaxLength(20)
                .HasColumnName("codigoBarraUnico");
            entity.Property(e => e.Denominacion)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("denominacion");
            entity.Property(e => e.Emailresponsable)
                .HasMaxLength(50)
                .HasColumnName("emailresponsable");
            entity.Property(e => e.Estadoborrado).HasColumnName("estadoborrado");
            entity.Property(e => e.Fechaadquisicion)
                .HasColumnType("date")
                .HasColumnName("fechaadquisicion");
            entity.Property(e => e.Fechacreacion)
                .HasColumnType("datetime")
                .HasColumnName("fechacreacion");
            entity.Property(e => e.Fechamodificacion)
                .HasColumnType("date")
                .HasColumnName("fechamodificacion");
            entity.Property(e => e.Idcentroemplazamiento).HasColumnName("idcentroemplazamiento");
            entity.Property(e => e.Idgrupoplanificacionmantenimiento).HasColumnName("idgrupoplanificacionmantenimiento");
            entity.Property(e => e.Idindicadorabc).HasColumnName("idindicadorabc");
            entity.Property(e => e.Idpuestotrabajoresponsable).HasColumnName("idpuestotrabajoresponsable");
            entity.Property(e => e.Idtipo).HasColumnName("idtipo");
            entity.Property(e => e.Idusuariocreador).HasColumnName("idusuariocreador");
            entity.Property(e => e.Idusuariomodificador).HasColumnName("idusuariomodificador");
            entity.Property(e => e.NoOrdenPermanenteCombustible)
                .HasMaxLength(20)
                .HasColumnName("noOrdenPermanenteCombustible");
            entity.Property(e => e.Nombreequipo)
                .IsRequired()
                .HasMaxLength(20)
                .HasColumnName("nombreequipo");
            entity.Property(e => e.Nombreresponsable)
                .HasMaxLength(50)
                .HasColumnName("nombreresponsable");
            entity.Property(e => e.Puestaserviciodesde)
                .HasColumnType("date")
                .HasColumnName("puestaserviciodesde");
            entity.Property(e => e.Serie)
                .HasMaxLength(50)
                .HasColumnName("serie");

            entity.HasOne(d => d.IdcentroemplazamientoNavigation).WithMany(p => p.Equipos)
                .HasForeignKey(d => d.Idcentroemplazamiento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Equipos_CentrosEmplazamiento");

            entity.HasOne(d => d.IdgrupoplanificacionmantenimientoNavigation).WithMany(p => p.Equipos)
                .HasForeignKey(d => d.Idgrupoplanificacionmantenimiento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Equipos_GruposPlanificacionMantenimiento");

            entity.HasOne(d => d.IdindicadorabcNavigation).WithMany(p => p.Equipos)
                .HasForeignKey(d => d.Idindicadorabc)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Equipos_IndicadoresCriticidad");

            entity.HasOne(d => d.IdpuestotrabajoresponsableNavigation).WithMany(p => p.Equipos)
                .HasForeignKey(d => d.Idpuestotrabajoresponsable)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Equipos_PuestosTrabajo");

            entity.HasOne(d => d.IdtipoNavigation).WithMany(p => p.Equipos)
                .HasForeignKey(d => d.Idtipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Equipos_TiposEquipos");

            entity.HasOne(d => d.IdusuariocreadorNavigation).WithMany(p => p.EquipoIdusuariocreadorNavigations)
                .HasForeignKey(d => d.Idusuariocreador)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Equipos_Usuarios");

            entity.HasOne(d => d.IdusuariomodificadorNavigation).WithMany(p => p.EquipoIdusuariomodificadorNavigations)
                .HasForeignKey(d => d.Idusuariomodificador)
                .HasConstraintName("FK_Equipos_Usuarios1");
        });

        modelBuilder.Entity<EstatusOrdene>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EstatusO__3214EC0768D9D89B");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.NombreEstatus)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<EstrategiasMantenimiento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Estrateg__3214EC07F55374D3");

            entity.ToTable("EstrategiasMantenimiento");

            entity.Property(e => e.Activo).HasDefaultValueSql("((1))");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.IdunidadEstrategia).HasColumnName("IDUnidadEstrategia");
            entity.Property(e => e.NombreEstrategia)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.PorcHorizonteApertura)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("Porc_horizonteApertura");

            entity.HasOne(d => d.IdunidadEstrategiaNavigation).WithMany(p => p.EstrategiasMantenimientos)
                .HasForeignKey(d => d.IdunidadEstrategia)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EstrategiasMantenimiento_UnidadesMedidaCaracteristicas");
        });

        modelBuilder.Entity<GruposHojasRutum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__GruposHo__3214EC0757FD1248");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.IdestrategiaMantenimiento).HasColumnName("IDEstrategiaMantenimiento");
            entity.Property(e => e.NombregrupoHojaRuta)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<GruposPlanificacionMantenimiento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__GruposPl__3214EC07E62AD443");

            entity.ToTable("GruposPlanificacionMantenimiento");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.Denominacion)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.NombregrupoPlanificacion)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<HistorialMantenimientoCreado>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Historia__3214EC0728F1FE32");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("date");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.LecturaContadorEjecucion).HasColumnType("numeric(18, 2)");

            entity.HasOne(d => d.IdCicloPaqueteMantenimientoNavigation).WithMany(p => p.HistorialMantenimientoCreados)
                .HasForeignKey(d => d.IdCicloPaqueteMantenimiento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_HistorialMantenimientoCreados_CiclosPaquetesMantenimiento");

            entity.HasOne(d => d.IdOrdenMantenimientoCreadaNavigation).WithMany(p => p.HistorialMantenimientoCreados)
                .HasForeignKey(d => d.IdOrdenMantenimientoCreada)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_HistorialMantenimientoCreados_OrdenesTrabajoEncabezado");

            entity.HasOne(d => d.IdPuntoMedidaAsociadoNavigation).WithMany(p => p.HistorialMantenimientoCreados)
                .HasForeignKey(d => d.IdPuntoMedidaAsociado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_HistorialMantenimientoCreados_PuntosMedida");
        });

        modelBuilder.Entity<IndicadoresCriticidad>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Indicado__3214EC07855CC426");

            entity.ToTable("IndicadoresCriticidad");

            entity.Property(e => e.Activo).HasDefaultValueSql("((1))");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.NombreIndicadorAbc)
                .IsRequired()
                .HasMaxLength(1)
                .HasColumnName("NombreIndicadorABC");
            entity.Property(e => e.TextoIndicadorAbc)
                .IsRequired()
                .HasMaxLength(20)
                .HasColumnName("TextoIndicadorABC");
        });

        modelBuilder.Entity<Materiale>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Material__3214EC07ECB7AE7B");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.CodigoMaterial)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.DescripcionMaterial)
                .IsRequired()
                .HasMaxLength(30);
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.PrecioUnitarioMonedaLocal)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("Precio_UnitarioMonedaLocal");
            entity.Property(e => e.StockInicial).HasColumnType("numeric(18, 2)");

            entity.HasOne(d => d.IdCategoriaMaterialNavigation).WithMany(p => p.Materiales)
                .HasForeignKey(d => d.IdCategoriaMaterial)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Materiales_CategoriasMateriales");

            entity.HasOne(d => d.IdSeccionMaquinaNavigation).WithMany(p => p.Materiales)
                .HasForeignKey(d => d.IdSeccionMaquina)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Materiales_SeccionesMaquina");

            entity.HasOne(d => d.IdUnidadMedidaNavigation).WithMany(p => p.Materiales)
                .HasForeignKey(d => d.IdUnidadMedida)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Materiales_UnidadesMedidaCaracteristicas");
        });

        modelBuilder.Entity<Menu>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Sg_Menu");

            entity.ToTable("Menu");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Codigo)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Creacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Icon)
                .HasMaxLength(50)
                .IsFixedLength();
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(150);
            entity.Property(e => e.Url).HasMaxLength(50);

            entity.HasOne(d => d.Perfil).WithMany(p => p.Menus)
                .HasForeignKey(d => d.PerfilId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Menu_Perfil");
        });

        modelBuilder.Entity<NotificacionManoObra>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Notifica__3214EC07CCE0043C");

            entity.ToTable("NotificacionManoObra");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.DuracionRealOperacion).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.IdOperacionOrdenNavigation).WithMany(p => p.NotificacionManoObras)
                .HasForeignKey(d => d.IdOperacionOrden)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_NotificacionManoObra_OperacionesOrdenes");

            entity.HasOne(d => d.IdOrdenMantenimientoNavigation).WithMany(p => p.NotificacionManoObras)
                .HasForeignKey(d => d.IdOrdenMantenimiento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_NotificacionManoObra_OrdenesTrabajoEncabezado");
        });

        modelBuilder.Entity<OperacionesHojasRutum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Operacio__3214EC07A726D805");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.CantidadHombres).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.CantidadTrabajo).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.DescripcionOperacion)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.DuracionPorHombre).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.IdunidadMedidaTrabajo).HasColumnName("IDUnidadMedidaTrabajo");

            entity.HasOne(d => d.IdGrupoHojaRutaNavigation).WithMany(p => p.OperacionesHojasRuta)
                .HasForeignKey(d => d.IdGrupoHojaRuta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OperacionesHojasRuta_GruposHojasRuta");
        });

        modelBuilder.Entity<OperacionesOrdene>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Operacio__3214EC079CBC4D54");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.DuracionOperacion).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.TextoBreveReparacion)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.IdOrdenNavigation).WithMany(p => p.OperacionesOrdenes)
                .HasForeignKey(d => d.IdOrden)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OperacionesOrdenes_OrdenesTrabajoEncabezado");

            entity.HasOne(d => d.IdPuestoTrabajoNavigation).WithMany(p => p.OperacionesOrdenes)
                .HasForeignKey(d => d.IdPuestoTrabajo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OperacionesOrdenes_PuestosTrabajo");
        });

        modelBuilder.Entity<OrdenesTrabajoEncabezado>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OrdenesT__3214EC07EB70B5AB");

            entity.ToTable("OrdenesTrabajoEncabezado");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.DescripcionGeneralOrden)
                .IsRequired()
                .HasMaxLength(25);
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaFinOrden).HasColumnType("date");
            entity.Property(e => e.FechaInicioOrden).HasColumnType("date");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.IdestatusOrden).HasColumnName("IDEstatusOrden");
            entity.Property(e => e.ServicioExterno)
                .IsRequired()
                .HasDefaultValueSql("((1))");

            entity.HasOne(d => d.IdClaseOrdenNavigation).WithMany(p => p.OrdenesTrabajoEncabezados)
                .HasForeignKey(d => d.IdClaseOrden)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrdenesTrabajoEncabezado_ClasesdeOrden");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.OrdenesTrabajoEncabezados)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrdenesTrabajoEncabezado_Equipos");

            entity.HasOne(d => d.IdPrioridadOrdenNavigation).WithMany(p => p.OrdenesTrabajoEncabezados)
                .HasForeignKey(d => d.IdPrioridadOrden)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrdenesTrabajoEncabezado_PrioridadesMantenimiento");

            entity.HasOne(d => d.IdestatusOrdenNavigation).WithMany(p => p.OrdenesTrabajoEncabezados)
                .HasForeignKey(d => d.IdestatusOrden)
                .HasConstraintName("FK_OrdenesTrabajoEncabezado_EstatusOrdenes");
        });

        modelBuilder.Entity<PaqueteMantenimientoOperacionHojaRutum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PaqueteM__3214EC07741DCEEA");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.IdCicloPaqueteMantenimientoNavigation).WithMany(p => p.PaqueteMantenimientoOperacionHojaRuta)
                .HasForeignKey(d => d.IdCicloPaqueteMantenimiento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PaqueteMantenimientoOperacionHojaRuta_CiclosPaquetesMantenimiento");

            entity.HasOne(d => d.IdOperacionHoraRutaNavigation).WithMany(p => p.PaqueteMantenimientoOperacionHojaRuta)
                .HasForeignKey(d => d.IdOperacionHoraRuta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PaqueteMantenimientoOperacionHojaRuta_OperacionesHojasRuta");
        });

        modelBuilder.Entity<PaquetesMantenimiento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Paquetes__3214EC0702563CB9");

            entity.ToTable("PaquetesMantenimiento");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Idequiporeferencia).HasColumnName("IDEquiporeferencia");
            entity.Property(e => e.PlanMantPreventivo)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.PorcHorizonteApertura)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("Porc_horizonteApertura");
            entity.Property(e => e.ValorInicialContador).HasColumnType("numeric(18, 2)");

            entity.HasOne(d => d.IdClaseOrdenNavigation).WithMany(p => p.PaquetesMantenimientos)
                .HasForeignKey(d => d.IdClaseOrden)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PaquetesMantenimiento_ClasesdeOrden");

            entity.HasOne(d => d.IdEstrategiaMantenimientoNavigation).WithMany(p => p.PaquetesMantenimientos)
                .HasForeignKey(d => d.IdEstrategiaMantenimiento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PaquetesMantenimiento_EstrategiasMantenimiento");

            entity.HasOne(d => d.IdPrioridadMantoNavigation).WithMany(p => p.PaquetesMantenimientos)
                .HasForeignKey(d => d.IdPrioridadManto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PaquetesMantenimiento_PrioridadesMantenimiento");

            entity.HasOne(d => d.IdPuntoMedidaNavigation).WithMany(p => p.PaquetesMantenimientos)
                .HasForeignKey(d => d.IdPuntoMedida)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PaquetesMantenimiento_PuntosMedida");

            entity.HasOne(d => d.IdgrupoHojaRutaNavigation).WithMany(p => p.PaquetesMantenimientos)
                .HasForeignKey(d => d.IdgrupoHojaRuta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PaquetesMantenimiento_GruposHojasRuta");
        });

        modelBuilder.Entity<Perfil>(entity =>
        {
            entity.ToTable("Perfil");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Creacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<Periodo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Periodos__3214EC072051BA46");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaFin).HasColumnType("date");
            entity.Property(e => e.FechaInicio).HasColumnType("date");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.NombrePeriodo)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<PresupuestoEquipo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Presupue__3214EC07940460E2");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.HorasKmPlan).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.TextoBreve)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.ValorGastoPlanMonedaLocal)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("Valor_GastoPlanMonedaLocal");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.PresupuestoEquipos)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PresupuestoEquipos_Equipos");

            //entity.HasOne(d => d.IdPeriodoNavigation).WithMany(p => p.PresupuestoEquipos)
            //    .HasForeignKey(d => d.IdPeriodo)
            //    .OnDelete(DeleteBehavior.ClientSetNull)
            //    .HasConstraintName("FK_PresupuestoEquipos_Periodos");
        });

        modelBuilder.Entity<PrioridadesMantenimiento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Priorida__3214EC07BBF669FC");

            entity.ToTable("PrioridadesMantenimiento");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.Denominacion)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.NombrePrioridad)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<PuestosTrabajo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PuestosT__3214EC076F556D26");

            entity.ToTable("PuestosTrabajo");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.Denominacion)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.NombrePuesto)
                .IsRequired()
                .HasMaxLength(1);
            entity.Property(e => e.ValorPuestoTrabajoHora).HasColumnType("numeric(18, 2)");
        });

        modelBuilder.Entity<PuntosMedidum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PuntosMe__3214EC072CBB07AD");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.ContadorIniciaDesde).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.ContadorrotaAlos).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.Denominacion)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.PuntosMedida)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PuntosMedida_Equipos");

            entity.HasOne(d => d.IdTipoPuntoMedidaNavigation).WithMany(p => p.PuntosMedida)
                .HasForeignKey(d => d.IdTipoPuntoMedida)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PuntosMedida_TiposPuntoMedida");

            entity.HasOne(d => d.IdUnidadCaracteristicaNavigation).WithMany(p => p.PuntosMedida)
                .HasForeignKey(d => d.IdUnidadCaracteristica)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PuntosMedida_UnidadesMedidaCaracteristicas");
        });

        modelBuilder.Entity<SeccionesMaquina>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Seccione__3214EC07DCDC2830");

            entity.ToTable("SeccionesMaquina");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.NombreSeccion)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<Sucursale>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Creacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(150);

            entity.HasOne(d => d.Empresa).WithMany(p => p.Sucursales)
                .HasForeignKey(d => d.EmpresaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Sucursales_Empresa");
        });

        modelBuilder.Entity<TiposEquipo>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("activo");
            entity.Property(e => e.Estadoborrado).HasColumnName("estadoborrado");
            entity.Property(e => e.Fechacreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechacreacion");
            entity.Property(e => e.Fechamodificacion)
                .HasColumnType("date")
                .HasColumnName("fechamodificacion");
            entity.Property(e => e.Idusuariocreador).HasColumnName("idusuariocreador");
            entity.Property(e => e.Idusuariomodificador).HasColumnName("idusuariomodificador");
            entity.Property(e => e.Nombretipo)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("nombretipo");
        });

        modelBuilder.Entity<TiposPuntoMedidum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TiposPun__3214EC0742DF8150");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.Denominacion)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.TipoPuntoMedida)
                .IsRequired()
                .HasMaxLength(1);
        });

        modelBuilder.Entity<UnidadesMedidaCaracteristica>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Unidades__3214EC073C8E1245");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.NombreUm)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("Nombre_UM");
            entity.Property(e => e.TextoUnidadMedida)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Usuarios__3214EC077A3A1D0F");

            entity.Property(e => e.Activo)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.Alias).HasMaxLength(50);
            entity.Property(e => e.ContrasenaTemporal)
                .HasMaxLength(250)
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.EstadoBorrado).HasDefaultValueSql("((0))");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaFinValidez).HasColumnType("date");
            entity.Property(e => e.FechaInicioValidez).HasColumnType("date");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.PrimerApellido)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.PrimerNombre)
                .IsRequired()
                .HasMaxLength(20);

            entity.HasOne(d => d.Perfil).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.PerfilId)
                .HasConstraintName("FK_Usuarios_Perfil");

            entity.HasOne(d => d.Sucursal).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.SucursalId)
                .HasConstraintName("FK_Usuarios_Sucursales");
        });

        modelBuilder.Entity<UsuariosMenu>(entity =>
        {
            entity.ToTable("Usuarios_Menu");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Creacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Menu).WithMany(p => p.UsuariosMenus)
                .HasForeignKey(d => d.MenuId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Usuarios_Menu_Menu");

            entity.HasOne(d => d.Usuario).WithMany(p => p.UsuariosMenus)
                .HasForeignKey(d => d.UsuarioId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Usuarios_Menu_Usuarios");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}